# -*- coding: utf-8 -*-
"""split_folders.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WnT7ACT25d5Spo6iyXUQCPf7fZPUtCd1
"""

# 參考連結 : https://gist.github.com/bertcarremans/679624f369ed9270472e37f8333244f5

# Copyright 2014-2017 Bert Carremans
# Author: Bert Carremans <bertcarremans.be>
#
# License: BSD 3 clause


import os
import random
from shutil import copyfile

def img_train_test_split(img_source_dir):
    """
    Randomly splits images over a train and validation folder, while preserving the folder structure
    
    Parameters
    ----------
    img_source_dir : string
        Path to the folder with the images to be split. Can be absolute or relative path   
        
    train_size : float
        Proportion of the original images that need to be copied in the subdirectory in the train folder
    """    
    if not (isinstance(img_source_dir, str)):
        raise AttributeError('img_source_dir must be a string')
        
    if not os.path.exists(img_source_dir):
        raise OSError('img_source_dir does not exist')
        
        
    # Set up empty folder structure if not exists
    if not os.path.exists('new_dataset'):
        os.makedirs('new_dataset')

    train_dir = 'new_dataset/train_tt/HR/'
    validation_dir = 'new_dataset/valid_tt/HR/'

    # Create subdirectories in train and validation folders
    if not os.path.exists(train_dir):
        os.makedirs(train_dir)

    if not os.path.exists(validation_dir):
        os.makedirs(validation_dir)

    if len(os.listdir(img_source_dir)) == 0:
        print(img_source_dir + ' is empty')
        return 0

    tr = 0
    val = 0
    total_imgname = os.listdir(img_source_dir)
    
    for filename in total_imgname:
        if filename.endswith(".jpg") or filename.endswith(".png"): 
            fileparts = filename.split('.')
            if fileparts[0].isdecimal() is True:     
                copyfile(os.path.join(img_source_dir, filename), os.path.join(train_dir, fileparts[0] + '.' + fileparts[1]))
                tr = tr+1
            else:
                copyfile(os.path.join(img_source_dir, filename), os.path.join(validation_dir, fileparts[0] + '.' + fileparts[1]))
                val = val+1
        
    print('train_len: ' + str(tr))
    print('val_len: ' + str(val))
    print('Copied ' + ' images to new_dataset/train_tt/HR/')
    print('Copied ' + ' images to new_dataset/valid_tt/HR/')

img_train_test_split('dataset/training_hr_images/training_hr_images')

